local colors_name = "gruvbones"
vim.g.colors_name = colors_name -- Required when defining a colorscheme

local lush = require "lush"
local hsluv = lush.hsluv -- Human-friendly hsl
local util = require "zenbones.util"

local bg = vim.o.background

-- Define a palette. Use `palette_extend` to fill unspecified colors
-- Based on https://github.com/gruvbox-community/gruvbox#palette
local palette
if bg == "light" then
  palette = util.palette_extend({
    bg = hsluv "#f9f5d7",
    bg1 = hsluv "#ebdbb2",
    bg2 = hsluv "#d5c4a1",
    fg = hsluv "#3c3836",
    fg0 = hsluv "#282828",
    fg1 = hsluv "#3c3836",
    fg2 = hsluv "#504945",
    fg3 = hsluv "#665c54",
    fg4 = hsluv "#7c6f64",
    col_col = hsluv "#F4EDB1",
    rose = hsluv "#9d0006",
    leaf = hsluv "#79740e",
    wood = hsluv "#b57614",
    water = hsluv "#076678",
    blossom = hsluv "#8f3f71",
    sky = hsluv "#427b58",
  }, bg)
else
  palette = util.palette_extend({
    bg = hsluv "#282828",
    bg1 = hsluv "#3c3836",
    bg2 = hsluv "#504945",
    fg = hsluv "#ebdbb2",
    fg0 = hsluv "#fbf1c7",
    fg1 = hsluv "#ebdbb2",
    fg2 = hsluv "#d5c4a1",
    fg3 = hsluv "#bdae93",
    fg4 = hsluv "#a89984",
    col_col = hsluv "#F4EDB1",
    rose = hsluv "#fb4934",
    leaf = hsluv "#b8bb26",
    wood = hsluv "#fabd2f",
    water = hsluv "#83a598",
    blossom = hsluv "#d3869b",
    sky = hsluv "#83c07c",
  }, bg)
end

-- Generate the lush specs using the generator util
local generator = require "zenbones.specs"
local base_specs = generator.generate(palette, bg, generator.get_global_config(colors_name, bg))

-- Optionally extend specs using Lush
local specs = lush.extends({ base_specs }).with(function()
  return {
    Statement { base_specs.Statement, fg = palette.fg0 },
    Special { fg = palette.fg2 },
    Type { fg = palette.fg1, gui = "italic" },
    Function { fg = palette.fg3, gui = "bold" },
    ColorColumn { bg = palette.col_col },
    DiagnosticUnnecessary { bg = palette.bg1 },
  }
end)

-- Pass the specs to lush to apply
lush(specs)

-- -- Optionally set term colors
-- require("zenbones.term").apply_colors(palette)
