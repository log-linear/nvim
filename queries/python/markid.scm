; Non-constant variables
(argument_list (identifier) @markid (#match? @markid "^[a-z].*"))
(as_pattern_target (identifier) @markid (#match? @markid "^[a-z].*"))
(assignment (identifier) @markid (#match? @markid "^[a-z].*"))
(attribute object: (identifier) @markid (#match? @markid "^[a-z].*"))
(augmented_assignment (identifier) @markid (#match? @markid "^[a-z].*"))
(binary_operator (identifier) @markid (#match? @markid "^[a-z].*"))
(boolean_operator (identifier) @markid (#match? @markid "^[a-z].*"))
(comparison_operator (identifier) @markid (#match? @markid "^[a-z].*"))
(conditional_expression (identifier) @markid (#match? @markid "^[a-z].*"))
(default_parameter (identifier) @markid (#match? @markid "^[a-z].*"))
(delete_statement (identifier) @markid (#match? @markid "^[a-z].*"))
(dictionary_splat (identifier) @markid (#match? @markid "^[a-z].*"))
(dictionary_splat_pattern (identifier) @markid (#match? @markid "^[a-z].*"))
(expression_list (identifier) @markid (#match? @markid "^[a-z].*"))
(for_in_clause (identifier) @markid (#match? @markid "^[a-z].*"))
(for_statement (identifier) @markid (#match? @markid "^[a-z].*"))
(generator_expression (identifier) @markid (#match? @markid "^[a-z].*"))
(global_statement (identifier) @markid (#match? @markid "^[a-z].*"))
(if_statement (identifier) @markid (#match? @markid "^[a-z].*"))
(elif_clause (identifier) @markid (#match? @markid "^[a-z].*"))
(interpolation (identifier) @markid (#match? @markid "^[a-z].*"))
(keyword_argument value: (identifier) @markid (#match? @markid "^[a-z].*"))
(list_comprehension (identifier) @markid (#match? @markid "^[a-z].*"))
(list (identifier) @markid (#match? @markid "^[a-z].*"))
(list_splat (identifier) @markid (#match? @markid "^[a-z].*"))
(list_splat_pattern (identifier) @markid (#match? @markid "^[a-z].*"))
(nonlocal_statement (identifier) @markid (#match? @markid "^[a-z].*"))
(not_operator (identifier) @markid (#match? @markid "^[a-z].*"))
(pair (identifier) @markid (#match? @markid "^[a-z].*"))
(parameters (identifier) @markid (#match? @markid "^[a-z].*"))
(pattern_list (identifier) @markid (#match? @markid "^[a-z].*"))
(return_statement (identifier) @markid (#match? @markid "^[a-z].*"))
(set_comprehension (identifier) @markid (#match? @markid "^[a-z].*"))
(slice (identifier) @markid (#match? @markid "^[a-z].*"))
(subscript (identifier) @markid (#match? @markid "^[a-z].*"))
(tuple (identifier) @markid (#match? @markid "^[a-z].*"))
(tuple_pattern (identifier) @markid (#match? @markid "^[a-z].*"))
(typed_default_parameter (identifier) @markid (#match? @markid "^[a-z].*"))
(typed_parameter (identifier) @markid (#match? @markid "^[a-z].*"))
(unary_operator (identifier) @markid (#match? @markid "^[a-z].*"))

; Constants: Single letter variable names
(argument_list (identifier) @markid (#match? @markid "^[A-Z]"))
(as_pattern_target (identifier) @markid (#match? @markid "^[A-Z]"))
(assignment (identifier) @markid (#match? @markid "^[A-Z]"))
(attribute object: (identifier) @markid (#match? @markid "^[A-Z]"))
(augmented_assignment (identifier) @markid (#match? @markid "^[A-Z]"))
(binary_operator (identifier) @markid (#match? @markid "^[A-Z]"))
(boolean_operator (identifier) @markid (#match? @markid "^[A-Z]"))
(comparison_operator (identifier) @markid (#match? @markid "^[A-Z]"))
(conditional_expression (identifier) @markid (#match? @markid "^[A-Z]"))
(default_parameter (identifier) @markid (#match? @markid "^[A-Z]"))
(delete_statement (identifier) @markid (#match? @markid "^[A-Z]"))
(dictionary_splat (identifier) @markid (#match? @markid "^[A-Z]"))
(dictionary_splat_pattern (identifier) @markid (#match? @markid "^[A-Z]"))
(expression_list (identifier) @markid (#match? @markid "^[A-Z]"))
(for_in_clause (identifier) @markid (#match? @markid "^[A-Z]"))
(for_statement (identifier) @markid (#match? @markid "^[A-Z]"))
(generator_expression (identifier) @markid (#match? @markid "^[A-Z]"))
(global_statement (identifier) @markid (#match? @markid "^[A-Z]"))
(if_statement (identifier) @markid (#match? @markid "^[A-Z]"))
(elif_clause (identifier) @markid (#match? @markid "^[A-Z]"))
(interpolation (identifier) @markid (#match? @markid "^[A-Z]"))
(keyword_argument value: (identifier) @markid (#match? @markid "^[A-Z]"))
(list_comprehension (identifier) @markid (#match? @markid "^[A-Z]"))
(list (identifier) @markid (#match? @markid "^[A-Z]"))
(list_splat (identifier) @markid (#match? @markid "^[A-Z]"))
(list_splat_pattern (identifier) @markid (#match? @markid "^[A-Z]"))
(nonlocal_statement (identifier) @markid (#match? @markid "^[A-Z]"))
(not_operator (identifier) @markid (#match? @markid "^[A-Z]"))
(pair (identifier) @markid (#match? @markid "^[A-Z]"))
(parameters (identifier) @markid (#match? @markid "^[A-Z]"))
(pattern_list (identifier) @markid (#match? @markid "^[A-Z]"))
(return_statement (identifier) @markid (#match? @markid "^[A-Z]"))
(set_comprehension (identifier) @markid (#match? @markid "^[A-Z]"))
(slice (identifier) @markid (#match? @markid "^[A-Z]"))
(subscript (identifier) @markid (#match? @markid "^[A-Z]"))
(tuple (identifier) @markid (#match? @markid "^[A-Z]"))
(tuple_pattern (identifier) @markid (#match? @markid "^[A-Z]"))
(typed_default_parameter (identifier) @markid (#match? @markid "^[A-Z]"))
(typed_parameter (identifier) @markid (#match? @markid "^[A-Z]"))
(unary_operator (identifier) @markid (#match? @markid "^[A-Z]"))

; Constants: SCREAMING_SNAKE_CASE
(argument_list (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(as_pattern_target (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(assignment (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(attribute object: (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(augmented_assignment (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(binary_operator (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(boolean_operator (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(comparison_operator (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(conditional_expression (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(default_parameter (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(delete_statement (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(dictionary_splat (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(dictionary_splat_pattern (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(expression_list (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(for_in_clause (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(for_statement (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(generator_expression (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(global_statement (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(if_statement (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(elif_clause (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(interpolation (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(keyword_argument value: (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(list_comprehension (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(list (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(list_splat (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(list_splat_pattern (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(nonlocal_statement (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(not_operator (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(pair (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(parameters (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(pattern_list (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(return_statement (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(set_comprehension (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(slice (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(subscript (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(tuple (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(tuple_pattern (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(typed_default_parameter (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(typed_parameter (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
(unary_operator (identifier) @markid (#match? @markid "^[A-Z][A-Z_]+"))
